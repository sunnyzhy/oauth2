server:
  port: 8090

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://20.0.3.106:3306/oauth2?characterEncodeing=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
    druid:
      min-idle: 1
      max-active: 20
      test-on-borrow: true
      filter:
        stat:
          enabled: false
  redis:
    database: 15
    host: 20.0.0.252
    port: 6379
    password: saftop9854
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0

mybatis:
  mapper-locations: classpath:mapper/*.xml

logging:
  level:
    org.springframework.jdbc.core: debug # 打印 oauth2 内置的 sql 日志
    org.springframework.jdbc.core.StatementCreatorUtils: trace
    org:
      springframework:
        security:
          oauth:
            mapper: debug # 打印 mysql 日志
  file:
    name: ./log/run.log

oauth:
  token:
    store:
      strategy: JDBC # MEMORY,JDBC,JWT,REDIS
  http:
    permit: /oauth2/keys,/css/**,/js/**,/images/**,/oauth/**,/auth/**,/login
    login-page: /oauth/login
    login-processing-url: /oauth/login/process

login:
  page-url: http://localhost:8088/#/auth/login # 自定义的认证页面
  interface-url: http://localhost:8090/oauth/login/process

auth:
  authorization-uri: http://localhost:8090/oauth/authorize
  access-token-uri: http://localhost:8090/oauth/token

# 设置允许跨域访问的 URL
cors:
  allowed:
    origins-url:
      - http://localhost:8088
      - http://127.0.0.1:8088
  strategy: NGINX # SERVER:服务端实现跨域; NGINX:Nginx代理实现跨域